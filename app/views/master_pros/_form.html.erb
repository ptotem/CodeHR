<%= nested_form_for(@master_pro) do |f| %>
  <% if @master_pro.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@master_pro.errors.count, "error") %> prohibited this master_pro from being saved:</h2>

      <ul>
      <% @master_pro.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="row-fluid">
    <div class="span6">
      <div class="control-group">
        <label class="control-label">Name</label>
        <div class="controls">
              <%= f.text_field :name %>
        </div>
      </div>
    </div>
  </div>

    <hr>
    <div class="page-header position-relative">
      <h3>Master Steps</h3>
    </div>
    <div class="row-fluid">
      <div class="span12">
        <%= f.fields_for :master_steps do |master_step| %>

            <div class="row-fluid">
              <div class="span6">
                <div class="control-group">
                  <label class="control-label">Step Name</label>
                  <div class="controls">
                    <%= master_step.text_field :step_name %>
                  </div>
                </div>
              </div>
            </div>

            <div class="row-fluid">
              <div class="span4">
                <div class="control-group">
                  <label class="control-label">Action</label>
                  <div class="controls">
                    <%= master_step.select :action, options_for_select(["Fill", "Update", "Approve", "Notify", "SpawnD", "SpawnI"], disabled: "", :selected => master_step.object.action), {:class=>"my_cls"}, :onchange=>"model_select_control($(this));" %>
                  </div>
                </div>
              </div>
              <div class="span4">
                <div class="control-group">
                  <label class="control-label">Action Class</label>
                  <div class="controls model-select-dropdown-container">
                    <% @models = Dir["#{Rails.root}/app/models/*.rb"].map{|i| i.sub('.rb','').sub("#{Rails.root}/app/models/","").underscore.camelize} %>
                    <%= master_step.select :action_class, options_for_select(["","System"]+@models.collect{ |u| [u] }, :include_blank => "Select", :selected => master_step.object.action_class), {:class => "models-select"}  %>
                  </div>
                </div>
              </div>
              <div class="span4">
                <div class="control-group">
                  <label class="control-label">Action Parameter</label>
                  <div class="controls">
                    <%= master_step.text_area :action_parameter, :rows=>"5", :cols=>"4" %>
                  </div>
                </div>
              </div>
            </div>

            <div class="row-fluid spawn-process">
              <div class="span12">
                <div class="row-fluid">
                  <div class="span4">
                    <div class="control-group">
                      <label class="control-label">Spawn Process</label>
                      <div class="controls">
                        <%= select_tag "process_list", options_from_collection_for_select(MasterPro.all,"id","name") %>
                        <%#= f.select :role, options_from_collection_for_select(Role.all,'id','name'), {:include_blank => "Select"} %>
                      </div>
                    </div>
                  </div>
                  <div class="span4">
                    <div class="control-group">
                      <div class="row-fluid" style="margin-top: 9%;">
                        <div class="span6">
                          <button class="btn btn-primary btn-small manual-btn" type="button" onclick="toggle_btns($(this), $(this).parent().next().children().first())">Manual</button>
                        </div>
                        <div class="span6">
                          <button class="btn btn-success btn-small auto-btn" type="button" onclick="toggle_btns($(this), $(this).parent().prev().children().first())">Auto</button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div class="span4">
                    <div class="control-group">
                      <label class="control-label">For</label>
                      <div class="controls">
                        <%= text_field_tag :arr %>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="row-fluid manual-action" style="display: none;">
                  <div class="control-group">
                    <label class="control-label">Assign To</label>
                    <div class="controls">
                      <%= select_tag "assign_to", options_from_collection_for_select(EmployeeMaster.all,"id","employee_name") %>
                      <%#= f.select :role, options_from_collection_for_select(Role.all,'id','name'), {:include_blank => "Select"} %>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <%= master_step.link_to_remove "Remove this task" %>
            <hr>
        <% end %>
        <p><%= f.link_to_add "Add a task", :master_steps %></p>
      </div>
    </div>


  <br>
  <div class="actions">
    <%= f.submit :class=>"btn btn-info" %>
  </div>
<% end %>

<script>
  $(function(){

  });

  function model_select_control(this_obj){
      var action_name = $(this_obj).val();
      var parent_field = $(this_obj).parent().parent().parent().parent().parent().parent();
      var models_dropdown = $(parent_field).find(".model-select-dropdown-container");

      var data = {action_name: []};
      data["action_name"].push(action_name);

      $(models_dropdown).children().first().html("");

      if ( (action_name == "Approve") || (action_name == "Notify") ) {
          var options = ["True", "False"];
          for(var i=0; i< options.length; i++){
              $(models_dropdown).children().first().append("<option value="+options[i]+">"+options[i]+"</option>");
          }
      }
      else if ( action_name == "SpawnD" ) {
        console.log("ja");
      }
      else{
          $.ajax({
              type: "POST",
              url: "/get_dropdown_data",
              data: JSON.stringify(data),
              contentType: "application/json; charset=utf-8",
              success: function(result){

                  var substr = result.split(',');
                  var v;
                  for(var i=0; i< substr.length; i++)
                  {
                      v = substr[i].replace('[', '').replace(']', '').replace(/"/g, '').replace(/ /g,'');
                      $(models_dropdown).children().first().append("<option value="+v+">"+v+"</option>");
                  }



              }
          });
      }
  }

  //function to toggle manual and auto btns
  function toggle_btns(this_btn, other_btn){
    //console.log($(this_btn).attr('class'));
    //console.log($(other_btn).attr('class'));

    var parent_row = $(this_btn).parents().eq(6);
    var manual_action_row = $(parent_row).find('.manual-action');

    if ( $(this_btn).attr('class').indexOf("manual-btn") >= 0 ) {
        $(manual_action_row).show();
    }
    else
    {
        $(manual_action_row).hide();
    }


  }

</script>
